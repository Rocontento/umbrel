DEPLOY_IMAGE_NAME="umbrelos"
MENDER_DEVICE_TYPE="amd64"

# This gives us:
# - 200Mb EFI
# - 2x ~10GB OS partitions
# - 512MB data partition (so that mkfs.ext4 can fit a 128MB journal contiguosly in one flex-group)
# We'll expand the data partition to consume 100% of the block device on first boot.
MENDER_STORAGE_TOTAL_SIZE_MB="$((1024 * 20))"
MENDER_BOOT_PART_SIZE_MB="200"
MENDER_DATA_PART_SIZE_MB="512"

# We don't want the Mender systemd cloud service.
MENDER_ENABLE_SYSTEMD="n"

# We don't want to let mender-convert inject mender-client
# since it appears to be broken on bookworm. Instead we
# install via apt in the image.
MENDER_CLIENT_INSTALL="n"
MENDER_CLIENT_VERSION="3.4.0"

# Rreasonably fast and offers good compression
MENDER_ARTIFACT_COMPRESSION="gzip"

# If we don't disable this the image is unbootable
MENDER_COPY_BOOT_GAP="n"

# We'll disable this and implement our own expansion logic.
# This successfulyl expands the filesystem to 100% of the partition
# but it doesn't expand the partition to 100% of the block device.
MENDER_DATA_PART_GROWFS="n"
MENDER_DATA_PART_FSTAB_OPTS="${MENDER_DATA_PART_FSTAB_OPTS},x-systemd.growfs"
MENDER_ROOT_PART_FSTAB_OPTS="${MENDER_ROOT_PART_FSTAB_OPTS},x-systemd.growfs"

# mkfs.ext4 options for the initial 128 MB Mender data partition
# We later grow this partition to 100% of the block device, so we must override
# mkfs.ext4’s size-based heuristics; otherwise it will default to values that are
# fine for a small 128 MB filesystem, but sub-optimal once the partition is expanded to
# real-world sized drives.
#
# -b 4096: 4 KB blocks. This would default to 1KB for a 128MB partition.
# -I 256: 256-byte inodes. This would default to 128 bytes for a 128MB partition.
# -i 65536: 1 inode per 64 KB of data → On a 1.8TB partition this is ~30 million inodes,
#           which take up ~7 GB for inode tables.
# -m 0: Reserve 0 % of blocks for root processes. Custom -m percentage will not scale correctly
#       during fs expansion, so to set a custom reserve we would need to set this via tune2fs after expansion.
# -J size=128: Creates a 128MB journal. We set the initial image partition size to 512MB to ensure a contiguous 128MB of free space in one flex-group for the journal.
# -O ...: Force-enable all ext4 features we rely on, even if some would already be on by default.
MENDER_DATA_PART_MKFS_OPTS="-b 4096 -I 256 -i 65536 -m 0 \
-J size=128 \
-O extent,flex_bg,sparse_super,large_file,huge_file,dir_index,filetype,64bit,metadata_csum,large_dir,extra_isize,has_journal \
-L data"

# Dealing with partition UUIDs instead of device paths
# allows us to produce a single image that is bootable
# on both QEMU (/dev/sda) and Umbrel Home (/dev/nvme0n1p).
MENDER_ENABLE_PARTUUID="y"
MENDER_BOOT_PART="/dev/disk/by-partuuid/14a31e9d-a8d7-4da0-9eb2-f268dd9d7ad9"
MENDER_ROOTFS_PART_A="/dev/disk/by-partuuid/2fe5a278-9b55-4266-8220-6665aa96940b"
MENDER_ROOTFS_PART_B="/dev/disk/by-partuuid/f5e6d27c-4a25-447b-8e08-a9d2e738345a"
MENDER_DATA_PART="/dev/disk/by-partuuid/d1d36e34-2753-4dc7-96eb-3c9b5584e867"

# Reduce noise on TTY
MENDER_GRUB_KERNEL_BOOT_ARGS="loglevel=3"

# Don't disable this for now since it's much faster since
# changing to gzip
# # Speed up development builds
# if [[ "${UMBREL_OS_DEV_BUILD}" == "true" ]]
# then
#     MENDER_ARTIFACT_COMPRESSION="none"
# fi